name: Client Billing Setup Automation

on:
  workflow_dispatch:
    inputs:
      client_name:
        description: 'Client name'
        required: true
        type: string
      billing_type:
        description: 'Billing type'
        required: true
        type: choice
        options:
          - monthly
          - quarterly
          - annual
      tier:
        description: 'Service tier'
        required: true
        type: choice
        options:
          - basic
          - standard
          - premium
          - enterprise
  issues:
    types: [opened, labeled]

env:
  CLIENT_DATA_PATH: './data/clients'
  TEMPLATES_PATH: './templates'

jobs:
  setup-client:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Parse client information
        id: parse
        run: |
          if [[ "${{ github.event_name }}" == "issues" ]]; then
            echo "Parsing issue for client information..."
            node scripts/parse-issue.js "${{ github.event.issue.body }}"
          else
            echo "Using workflow dispatch inputs..."
            echo "CLIENT_NAME=${{ inputs.client_name }}" >> $GITHUB_OUTPUT
            echo "BILLING_TYPE=${{ inputs.billing_type }}" >> $GITHUB_OUTPUT
            echo "TIER=${{ inputs.tier }}" >> $GITHUB_OUTPUT
            # Create branch-safe name
            BRANCH_NAME=$(echo "${{ inputs.client_name }}" | tr ' ' '-' | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9-]//g')
            echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_OUTPUT
          fi

      - name: Create client configuration
        run: |
          node scripts/create-client-config.js \
            --name "${{ steps.parse.outputs.CLIENT_NAME }}" \
            --billing "${{ steps.parse.outputs.BILLING_TYPE }}" \
            --tier "${{ steps.parse.outputs.TIER }}"

      - name: Setup billing system
        run: |
          node scripts/setup-billing.js \
            --client "${{ steps.parse.outputs.CLIENT_NAME }}" \
            --type "${{ steps.parse.outputs.BILLING_TYPE }}"

      - name: Generate documentation
        run: |
          node scripts/generate-docs.js \
            --client "${{ steps.parse.outputs.CLIENT_NAME }}"

      - name: Create pull request
        uses: peter-evans/create-pull-request@v5
        with:
          title: "Setup: ${{ steps.parse.outputs.CLIENT_NAME }}"
          body: |
            ## New Client Setup

            **Client:** ${{ steps.parse.outputs.CLIENT_NAME }}
            **Billing Type:** ${{ steps.parse.outputs.BILLING_TYPE }}
            **Tier:** ${{ steps.parse.outputs.TIER }}

            ### Automated Setup Completed:
            - [x] Client configuration created
            - [x] Billing system initialized
            - [x] Documentation generated
            - [x] Access permissions configured

            Please review and merge this PR to complete the setup.
          branch: setup/${{ steps.parse.outputs.BRANCH_NAME }}
          commit-message: "Add client setup for ${{ steps.parse.outputs.CLIENT_NAME }}"

      - name: Comment on issue
        if: github.event_name == 'issues'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `âœ… Client setup automation initiated for **${{ steps.parse.outputs.CLIENT_NAME }}**\n\nA pull request has been created with the complete setup.`
            })

  validate-setup:
    needs: setup-client
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate configuration
        run: |
          node scripts/validate-setup.js

      - name: Run tests
        run: npm test